{"nbformat":4,"nbformat_minor":0,"metadata":{"accelerator":"GPU","colab":{"name":"Exp038_Predict.ipynb ","provenance":[{"file_id":"14buLHzwACALiMi8dqkgFhlo3DFBtP2eS","timestamp":1629043489149}],"collapsed_sections":[],"toc_visible":true,"machine_shape":"hm"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"JXepDb7__Oml"},"source":["## Exp-038 (ULMS BERT)"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Sa2hpabgm7vJ","executionInfo":{"status":"ok","timestamp":1631911449744,"user_tz":-540,"elapsed":21306,"user":{"displayName":"KAZUKI HIRAHARA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09073430568031937610"}},"outputId":"a3b2645a-2b08-4c32-cfcc-92c37b9a80d2"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KKlEabxO_MSm","executionInfo":{"status":"ok","timestamp":1631911462101,"user_tz":-540,"elapsed":340,"user":{"displayName":"KAZUKI HIRAHARA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09073430568031937610"}},"outputId":"fc16d06b-4cd5-4b61-d7fa-419772a31299"},"source":["!nvidia-smi"],"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Fri Sep 17 20:44:21 2021       \n","+-----------------------------------------------------------------------------+\n","| NVIDIA-SMI 470.63.01    Driver Version: 460.32.03    CUDA Version: 11.2     |\n","|-------------------------------+----------------------+----------------------+\n","| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n","| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n","|                               |                      |               MIG M. |\n","|===============================+======================+======================|\n","|   0  Tesla T4            Off  | 00000000:00:04.0 Off |                    0 |\n","| N/A   42C    P8    10W /  70W |      0MiB / 15109MiB |      0%      Default |\n","|                               |                      |                  N/A |\n","+-------------------------------+----------------------+----------------------+\n","                                                                               \n","+-----------------------------------------------------------------------------+\n","| Processes:                                                                  |\n","|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n","|        ID   ID                                                   Usage      |\n","|=============================================================================|\n","|  No running processes found                                                 |\n","+-----------------------------------------------------------------------------+\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vE7GdrrE_dev","executionInfo":{"status":"ok","timestamp":1631911559702,"user_tz":-540,"elapsed":27454,"user":{"displayName":"KAZUKI HIRAHARA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09073430568031937610"}},"outputId":"ec28881a-c9a0-4464-d401-2952eacdefa4"},"source":["!pip install transformers \n","!pip install texthero\n","!pip install pycld2"],"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: transformers in /usr/local/lib/python3.7/dist-packages (4.10.2)\n","Requirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from transformers) (2.23.0)\n","Requirement already satisfied: sacremoses in /usr/local/lib/python3.7/dist-packages (from transformers) (0.0.45)\n","Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.7/dist-packages (from transformers) (5.4.1)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.7/dist-packages (from transformers) (3.0.12)\n","Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.7/dist-packages (from transformers) (1.19.5)\n","Requirement already satisfied: huggingface-hub>=0.0.12 in /usr/local/lib/python3.7/dist-packages (from transformers) (0.0.17)\n","Requirement already satisfied: tqdm>=4.27 in /usr/local/lib/python3.7/dist-packages (from transformers) (4.62.2)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from transformers) (21.0)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.7/dist-packages (from transformers) (2019.12.20)\n","Requirement already satisfied: importlib-metadata in /usr/local/lib/python3.7/dist-packages (from transformers) (4.8.1)\n","Requirement already satisfied: tokenizers<0.11,>=0.10.1 in /usr/local/lib/python3.7/dist-packages (from transformers) (0.10.3)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from huggingface-hub>=0.0.12->transformers) (3.7.4.3)\n","Requirement already satisfied: pyparsing>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging->transformers) (2.4.7)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata->transformers) (3.5.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests->transformers) (2021.5.30)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests->transformers) (1.24.3)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests->transformers) (2.10)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests->transformers) (3.0.4)\n","Requirement already satisfied: joblib in /usr/local/lib/python3.7/dist-packages (from sacremoses->transformers) (1.0.1)\n","Requirement already satisfied: click in /usr/local/lib/python3.7/dist-packages (from sacremoses->transformers) (7.1.2)\n","Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from sacremoses->transformers) (1.15.0)\n","Requirement already satisfied: texthero in /usr/local/lib/python3.7/dist-packages (1.1.0)\n","Requirement already satisfied: nltk>=3.3 in /usr/local/lib/python3.7/dist-packages (from texthero) (3.6.2)\n","Requirement already satisfied: gensim<4.0,>=3.6.0 in /usr/local/lib/python3.7/dist-packages (from texthero) (3.6.0)\n","Requirement already satisfied: plotly>=4.2.0 in /usr/local/lib/python3.7/dist-packages (from texthero) (4.4.1)\n","Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.7/dist-packages (from texthero) (1.19.5)\n","Requirement already satisfied: tqdm>=4.3 in /usr/local/lib/python3.7/dist-packages (from texthero) (4.62.2)\n","Requirement already satisfied: matplotlib>=3.1.0 in /usr/local/lib/python3.7/dist-packages (from texthero) (3.2.2)\n","Requirement already satisfied: spacy<3.0.0 in /usr/local/lib/python3.7/dist-packages (from texthero) (2.2.4)\n","Requirement already satisfied: pandas>=1.0.2 in /usr/local/lib/python3.7/dist-packages (from texthero) (1.1.5)\n","Requirement already satisfied: scikit-learn>=0.22 in /usr/local/lib/python3.7/dist-packages (from texthero) (0.22.2.post1)\n","Requirement already satisfied: wordcloud>=1.5.0 in /usr/local/lib/python3.7/dist-packages (from texthero) (1.5.0)\n","Requirement already satisfied: unidecode>=1.1.1 in /usr/local/lib/python3.7/dist-packages (from texthero) (1.3.2)\n","Requirement already satisfied: smart-open>=1.2.1 in /usr/local/lib/python3.7/dist-packages (from gensim<4.0,>=3.6.0->texthero) (5.2.1)\n","Requirement already satisfied: six>=1.5.0 in /usr/local/lib/python3.7/dist-packages (from gensim<4.0,>=3.6.0->texthero) (1.15.0)\n","Requirement already satisfied: scipy>=0.18.1 in /usr/local/lib/python3.7/dist-packages (from gensim<4.0,>=3.6.0->texthero) (1.4.1)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=3.1.0->texthero) (1.3.2)\n","Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=3.1.0->texthero) (2.8.2)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=3.1.0->texthero) (0.10.0)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=3.1.0->texthero) (2.4.7)\n","Requirement already satisfied: joblib in /usr/local/lib/python3.7/dist-packages (from nltk>=3.3->texthero) (1.0.1)\n","Requirement already satisfied: regex in /usr/local/lib/python3.7/dist-packages (from nltk>=3.3->texthero) (2019.12.20)\n","Requirement already satisfied: click in /usr/local/lib/python3.7/dist-packages (from nltk>=3.3->texthero) (7.1.2)\n","Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.7/dist-packages (from pandas>=1.0.2->texthero) (2018.9)\n","Requirement already satisfied: retrying>=1.3.3 in /usr/local/lib/python3.7/dist-packages (from plotly>=4.2.0->texthero) (1.3.3)\n","Requirement already satisfied: plac<1.2.0,>=0.9.6 in /usr/local/lib/python3.7/dist-packages (from spacy<3.0.0->texthero) (1.1.3)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.7/dist-packages (from spacy<3.0.0->texthero) (57.4.0)\n","Requirement already satisfied: murmurhash<1.1.0,>=0.28.0 in /usr/local/lib/python3.7/dist-packages (from spacy<3.0.0->texthero) (1.0.5)\n","Requirement already satisfied: requests<3.0.0,>=2.13.0 in /usr/local/lib/python3.7/dist-packages (from spacy<3.0.0->texthero) (2.23.0)\n","Requirement already satisfied: cymem<2.1.0,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from spacy<3.0.0->texthero) (2.0.5)\n","Requirement already satisfied: srsly<1.1.0,>=1.0.2 in /usr/local/lib/python3.7/dist-packages (from spacy<3.0.0->texthero) (1.0.5)\n","Requirement already satisfied: thinc==7.4.0 in /usr/local/lib/python3.7/dist-packages (from spacy<3.0.0->texthero) (7.4.0)\n","Requirement already satisfied: catalogue<1.1.0,>=0.0.7 in /usr/local/lib/python3.7/dist-packages (from spacy<3.0.0->texthero) (1.0.0)\n","Requirement already satisfied: wasabi<1.1.0,>=0.4.0 in /usr/local/lib/python3.7/dist-packages (from spacy<3.0.0->texthero) (0.8.2)\n","Requirement already satisfied: preshed<3.1.0,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from spacy<3.0.0->texthero) (3.0.5)\n","Requirement already satisfied: blis<0.5.0,>=0.4.0 in /usr/local/lib/python3.7/dist-packages (from spacy<3.0.0->texthero) (0.4.1)\n","Requirement already satisfied: importlib-metadata>=0.20 in /usr/local/lib/python3.7/dist-packages (from catalogue<1.1.0,>=0.0.7->spacy<3.0.0->texthero) (4.8.1)\n","Requirement already satisfied: typing-extensions>=3.6.4 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata>=0.20->catalogue<1.1.0,>=0.0.7->spacy<3.0.0->texthero) (3.7.4.3)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata>=0.20->catalogue<1.1.0,>=0.0.7->spacy<3.0.0->texthero) (3.5.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.13.0->spacy<3.0.0->texthero) (2021.5.30)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.13.0->spacy<3.0.0->texthero) (3.0.4)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.13.0->spacy<3.0.0->texthero) (2.10)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.13.0->spacy<3.0.0->texthero) (1.24.3)\n","Requirement already satisfied: pillow in /usr/local/lib/python3.7/dist-packages (from wordcloud>=1.5.0->texthero) (7.1.2)\n","Collecting pycld2\n","  Downloading pycld2-0.41.tar.gz (41.4 MB)\n","\u001b[K     |████████████████████████████████| 41.4 MB 1.7 MB/s \n","\u001b[?25hBuilding wheels for collected packages: pycld2\n","  Building wheel for pycld2 (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for pycld2: filename=pycld2-0.41-cp37-cp37m-linux_x86_64.whl size=9834190 sha256=6d9f8a07265622460ab5c0a97839afc3745cef60bd249b1a4264570123b3ea1a\n","  Stored in directory: /root/.cache/pip/wheels/ed/e4/58/ed2e9f43c07d617cc81fe7aff0fc6e42b16c9cf6afe960b614\n","Successfully built pycld2\n","Installing collected packages: pycld2\n","Successfully installed pycld2-0.41\n"]}]},{"cell_type":"code","metadata":{"id":"O3gDMmLR_oJ3","executionInfo":{"status":"ok","timestamp":1631911573750,"user_tz":-540,"elapsed":356,"user":{"displayName":"KAZUKI HIRAHARA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09073430568031937610"}}},"source":["input_dir = \"/content/drive/MyDrive/07_Competition/signate-471/data/\"\n","output_dir = \"/content/drive/MyDrive/07_Competition/signate-471/log/\"\n","submission_dir = \"/content/drive/MyDrive/07_Competition/signate-471/submission/\"\n","model_dir = \"/content/drive/MyDrive/07_Competition/signate-471/model_bin/\"\n","pred_dir = \"/content/drive/MyDrive/07_Competition/signate-471/pred/\""],"execution_count":9,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"88KVneP6_o1Z","executionInfo":{"status":"ok","timestamp":1631911573750,"user_tz":-540,"elapsed":2,"user":{"displayName":"KAZUKI HIRAHARA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09073430568031937610"}},"outputId":"a6be1f2f-81f3-46bc-8fbf-b539885b4df7"},"source":["import os\n","import math\n","import random\n","import pandas as pd\n","import numpy as np\n","from glob import glob\n","import gc\n","gc.enable()\n","\n","import torch\n","import torch.nn as nn\n","import torch.optim as optim\n","import torch.optim as optim\n","from torch.optim.optimizer import Optimizer\n","import torch.optim.lr_scheduler as lr_scheduler\n","from torch.utils.data import Dataset, DataLoader, SequentialSampler, RandomSampler\n","\n","from sklearn.model_selection import StratifiedKFold\n","from sklearn.metrics import fbeta_score\n","\n","from transformers import BertConfig, RobertaConfig\n","from transformers import (get_cosine_schedule_with_warmup, get_cosine_with_hard_restarts_schedule_with_warmup)\n","from transformers import BertTokenizer, RobertaTokenizer\n","from transformers import BertModel, RobertaModel\n","from transformers import AutoConfig, BertConfig, RobertaConfig\n","from transformers import BertForSequenceClassification, RobertaForSequenceClassification\n","from torch import cuda\n","import time\n","\n","from transformers import AdamW\n","from transformers import AutoTokenizer\n","from transformers import AutoModel, AutoModelForSequenceClassification\n","from transformers import MODEL_FOR_SEQUENCE_CLASSIFICATION_MAPPING\n","from transformers import get_linear_schedule_with_warmup\n","\n","from IPython.display import clear_output\n","from tqdm import tqdm, trange\n","\n","import re\n","import nltk\n","import pycld2 as cld2\n","from scipy.optimize import minimize, minimize_scalar\n","import regex\n","nltk.download('stopwords')"],"execution_count":10,"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Unzipping corpora/stopwords.zip.\n"]},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","metadata":{"id":"slgK2kwa_tdt","executionInfo":{"status":"ok","timestamp":1631911647805,"user_tz":-540,"elapsed":210,"user":{"displayName":"KAZUKI HIRAHARA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09073430568031937610"}}},"source":["class CFG:\n","  exp = \"exp37h\"\n","  seed = 71\n","  fold = 5\n","\n","CONFIG = CFG()"],"execution_count":12,"outputs":[]},{"cell_type":"code","metadata":{"id":"dVTpYxZHhG_t","executionInfo":{"status":"ok","timestamp":1631911812013,"user_tz":-540,"elapsed":9167,"user":{"displayName":"KAZUKI HIRAHARA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09073430568031937610"}}},"source":["pred_df_42_1=pd.read_csv(pred_dir +CONFIG.exp + \"/pred_df_42_1.csv\")\n","oof_df_42_1=pd.read_csv(pred_dir +CONFIG.exp + \"/oof_df_42_1.csv\")\n","pred_df_20_1=pd.read_csv(pred_dir +CONFIG.exp + \"/pred_df_20_1.csv\")\n","oof_df_20_1=pd.read_csv(pred_dir +CONFIG.exp + \"/oof_df_20_1.csv\")\n","pred_df_10_1=pd.read_csv(pred_dir +CONFIG.exp + \"/pred_df_10_1.csv\")\n","oof_df_10_1=pd.read_csv(pred_dir +CONFIG.exp + \"/oof_df_10_1.csv\")\n","pred_df_1_1=pd.read_csv(pred_dir +CONFIG.exp + \"/pred_df_1_1.csv\")\n","oof_df_1_1=pd.read_csv(pred_dir +CONFIG.exp + \"/oof_df_1_1.csv\")\n","pred_df_05_1=pd.read_csv(pred_dir +CONFIG.exp + \"/pred_df_05_1.csv\")\n","oof_df_05_1=pd.read_csv(pred_dir +CONFIG.exp + \"/oof_df_05_1.csv\")"],"execution_count":13,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":408},"id":"SvciyDSzhvV3","executionInfo":{"status":"ok","timestamp":1631911878502,"user_tz":-540,"elapsed":252,"user":{"displayName":"KAZUKI HIRAHARA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09073430568031937610"}},"outputId":"bb85eca8-4052-4358-fbd7-dde3163a1ec3"},"source":["oof_df_42_1"],"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>title</th>\n","      <th>abstract</th>\n","      <th>judgement</th>\n","      <th>fold</th>\n","      <th>title_abst</th>\n","      <th>title_word_len</th>\n","      <th>title_lang</th>\n","      <th>preds</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3</td>\n","      <td>New developments in diagnosis and therapy of C...</td>\n","      <td>The etiology and pathogenesis of idiopathic ch...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>New developments in diagnosis and therapy of C...</td>\n","      <td>13</td>\n","      <td>en</td>\n","      <td>0.003381</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>8</td>\n","      <td>Rehabilitation and Covid-19: the Cochrane Reha...</td>\n","      <td>INTRODUCTION: This paper improves the methodol...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Rehabilitation and Covid the Cochrane Rehabili...</td>\n","      <td>11</td>\n","      <td>en</td>\n","      <td>0.000073</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>25</td>\n","      <td>COVID-19, impact on myeloma patients</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>COVID impact on myeloma patients</td>\n","      <td>5</td>\n","      <td>en</td>\n","      <td>0.000272</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>26</td>\n","      <td>SARS-CoV-2 Positive Hospitalized Cancer Patien...</td>\n","      <td>In the coronavirus disease (COVID-19) pandemic...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>SARSCoV Positive Hospitalized Cancer Patients ...</td>\n","      <td>15</td>\n","      <td>en</td>\n","      <td>0.000009</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>27</td>\n","      <td>Value of echographic examination in the study ...</td>\n","      <td>Beside conventional radiology and bone scintig...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Value of echographic examination in the study ...</td>\n","      <td>9</td>\n","      <td>en</td>\n","      <td>0.002176</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>26916</th>\n","      <td>27123</td>\n","      <td>Utility of the combination of DAT SPECT and MI...</td>\n","      <td>Purpose: 123I-2β-Carbomethoxy-3β-(4-iodophenyl...</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>Utility of the combination of DAT SPECT and MI...</td>\n","      <td>20</td>\n","      <td>en</td>\n","      <td>0.667165</td>\n","    </tr>\n","    <tr>\n","      <th>26917</th>\n","      <td>27130</td>\n","      <td>Tocilizumab use in COVID -19 associated pneumonia</td>\n","      <td>BACKGROUND: We sought to evaluate the effect o...</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>Tocilizumab use in COVID associated pneumoniaB...</td>\n","      <td>7</td>\n","      <td>en</td>\n","      <td>0.000210</td>\n","    </tr>\n","    <tr>\n","      <th>26918</th>\n","      <td>27138</td>\n","      <td>Mortality of high-risk orthopaedic oncology pa...</td>\n","      <td>BACKGROUND AND OBJECTIVES: Should the threshol...</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>Mortality of highrisk orthopaedic oncology pat...</td>\n","      <td>14</td>\n","      <td>en</td>\n","      <td>0.000092</td>\n","    </tr>\n","    <tr>\n","      <th>26919</th>\n","      <td>27141</td>\n","      <td>Technologic developments in radiotherapy and s...</td>\n","      <td>We present a review of current technological p...</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>Technologic developments in radiotherapy and s...</td>\n","      <td>7</td>\n","      <td>en</td>\n","      <td>0.000271</td>\n","    </tr>\n","    <tr>\n","      <th>26920</th>\n","      <td>27144</td>\n","      <td>Multidetector CT findings and differential dia...</td>\n","      <td>OBJECTIVE: To compare the multidetector CT (MD...</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>Multidetector CT findings and differential dia...</td>\n","      <td>16</td>\n","      <td>en</td>\n","      <td>0.001932</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>26921 rows × 9 columns</p>\n","</div>"],"text/plain":["          id  ...     preds\n","0          3  ...  0.003381\n","1          8  ...  0.000073\n","2         25  ...  0.000272\n","3         26  ...  0.000009\n","4         27  ...  0.002176\n","...      ...  ...       ...\n","26916  27123  ...  0.667165\n","26917  27130  ...  0.000210\n","26918  27138  ...  0.000092\n","26919  27141  ...  0.000271\n","26920  27144  ...  0.001932\n","\n","[26921 rows x 9 columns]"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","metadata":{"id":"SNKnI9WhPGCb","executionInfo":{"status":"ok","timestamp":1631912114956,"user_tz":-540,"elapsed":217,"user":{"displayName":"KAZUKI HIRAHARA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09073430568031937610"}}},"source":["train_x = pd.DataFrame()\n","test_x = pd.DataFrame()\n","\n","train_x = pd.concat([train_x, oof_df_42_1[\"preds\"],oof_df_20_1[\"preds\"],oof_df_10_1[\"preds\"],oof_df_1_1[\"preds\"],oof_df_05_1[\"preds\"]], axis=1)\n","test_x = pd.concat([test_x, pred_df_42_1[\"judgement\"],pred_df_20_1[\"judgement\"],pred_df_10_1[\"judgement\"],pred_df_1_1[\"judgement\"],pred_df_05_1[\"judgement\"]], axis=1)\n","\n","datasets=[\"exp_42_1\",\"exp_20_1\",\"exp_10_1\",\"exp_1_1\",\"exp_05_1\"]\n","\n","train_x.columns=[\"exp_42_1\",\"exp_20_1\",\"exp_10_1\",\"exp_1_1\",\"exp_05_1\"]\n","test_x.columns=[\"exp_42_1\",\"exp_20_1\",\"exp_10_1\",\"exp_1_1\",\"exp_05_1\"]"],"execution_count":20,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":408},"id":"0ztOruKCiMrw","executionInfo":{"status":"ok","timestamp":1631912134310,"user_tz":-540,"elapsed":214,"user":{"displayName":"KAZUKI HIRAHARA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09073430568031937610"}},"outputId":"bd68a4bf-2608-4fc2-f2bb-adf305b6373e"},"source":["test_x"],"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>exp_42_1</th>\n","      <th>exp_20_1</th>\n","      <th>exp_10_1</th>\n","      <th>exp_1_1</th>\n","      <th>exp_05_1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.000064</td>\n","      <td>0.000178</td>\n","      <td>0.001491</td>\n","      <td>0.348350</td>\n","      <td>0.582036</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.002849</td>\n","      <td>0.003511</td>\n","      <td>0.007810</td>\n","      <td>0.426148</td>\n","      <td>0.690636</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.001064</td>\n","      <td>0.000377</td>\n","      <td>0.005521</td>\n","      <td>0.309102</td>\n","      <td>0.660535</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.002799</td>\n","      <td>0.000743</td>\n","      <td>0.005861</td>\n","      <td>0.412841</td>\n","      <td>0.730299</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.000669</td>\n","      <td>0.000593</td>\n","      <td>0.004428</td>\n","      <td>0.325670</td>\n","      <td>0.504006</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>40829</th>\n","      <td>0.000519</td>\n","      <td>0.000800</td>\n","      <td>0.004672</td>\n","      <td>0.442283</td>\n","      <td>0.709214</td>\n","    </tr>\n","    <tr>\n","      <th>40830</th>\n","      <td>0.000154</td>\n","      <td>0.000202</td>\n","      <td>0.001960</td>\n","      <td>0.310986</td>\n","      <td>0.635205</td>\n","    </tr>\n","    <tr>\n","      <th>40831</th>\n","      <td>0.008336</td>\n","      <td>0.001327</td>\n","      <td>0.016408</td>\n","      <td>0.273060</td>\n","      <td>0.585860</td>\n","    </tr>\n","    <tr>\n","      <th>40832</th>\n","      <td>0.032455</td>\n","      <td>0.028912</td>\n","      <td>0.064038</td>\n","      <td>0.434590</td>\n","      <td>0.706633</td>\n","    </tr>\n","    <tr>\n","      <th>40833</th>\n","      <td>0.028367</td>\n","      <td>0.001238</td>\n","      <td>0.017231</td>\n","      <td>0.283617</td>\n","      <td>0.657910</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>40834 rows × 5 columns</p>\n","</div>"],"text/plain":["       exp_42_1  exp_20_1  exp_10_1   exp_1_1  exp_05_1\n","0      0.000064  0.000178  0.001491  0.348350  0.582036\n","1      0.002849  0.003511  0.007810  0.426148  0.690636\n","2      0.001064  0.000377  0.005521  0.309102  0.660535\n","3      0.002799  0.000743  0.005861  0.412841  0.730299\n","4      0.000669  0.000593  0.004428  0.325670  0.504006\n","...         ...       ...       ...       ...       ...\n","40829  0.000519  0.000800  0.004672  0.442283  0.709214\n","40830  0.000154  0.000202  0.001960  0.310986  0.635205\n","40831  0.008336  0.001327  0.016408  0.273060  0.585860\n","40832  0.032455  0.028912  0.064038  0.434590  0.706633\n","40833  0.028367  0.001238  0.017231  0.283617  0.657910\n","\n","[40834 rows x 5 columns]"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":352},"id":"Rxpd9DPbiwRp","executionInfo":{"status":"ok","timestamp":1631912296987,"user_tz":-540,"elapsed":952,"user":{"displayName":"KAZUKI HIRAHARA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09073430568031937610"}},"outputId":"53da8dbe-46a2-4c08-c587-d25a714c6a9e"},"source":["import seaborn as sns\n","sns.distplot(test_x[\"exp_42_1\"])"],"execution_count":23,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n","  warnings.warn(msg, FutureWarning)\n"]},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f2769c17e10>"]},"metadata":{},"execution_count":23},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":352},"id":"WlQs7RBQjX0G","executionInfo":{"status":"ok","timestamp":1631912311519,"user_tz":-540,"elapsed":952,"user":{"displayName":"KAZUKI HIRAHARA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09073430568031937610"}},"outputId":"35585ae2-dbde-4bba-8ca9-04c098b63add"},"source":["sns.distplot(test_x[\"exp_20_1\"])"],"execution_count":24,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n","  warnings.warn(msg, FutureWarning)\n"]},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f276a85f590>"]},"metadata":{},"execution_count":24},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":352},"id":"L9e0rJcYjbXN","executionInfo":{"status":"ok","timestamp":1631912322723,"user_tz":-540,"elapsed":952,"user":{"displayName":"KAZUKI HIRAHARA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09073430568031937610"}},"outputId":"b52d0555-0bec-4fe1-9fc0-12f68882f69f"},"source":["sns.distplot(test_x[\"exp_10_1\"])"],"execution_count":25,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n","  warnings.warn(msg, FutureWarning)\n"]},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f2760270750>"]},"metadata":{},"execution_count":25},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":352},"id":"OeqQLKNUjeGf","executionInfo":{"status":"ok","timestamp":1631912330890,"user_tz":-540,"elapsed":934,"user":{"displayName":"KAZUKI HIRAHARA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09073430568031937610"}},"outputId":"b737904e-17a1-4321-f01a-356b38be40f1"},"source":["sns.distplot(test_x[\"exp_1_1\"])"],"execution_count":26,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n","  warnings.warn(msg, FutureWarning)\n"]},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f27601b4b10>"]},"metadata":{},"execution_count":26},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":352},"id":"-Id7XnhejgGX","executionInfo":{"status":"ok","timestamp":1631912349230,"user_tz":-540,"elapsed":733,"user":{"displayName":"KAZUKI HIRAHARA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09073430568031937610"}},"outputId":"5823d60f-1dec-46e4-8c38-d0e04b36bac6"},"source":["sns.distplot(test_x[\"exp_05_1\"])"],"execution_count":27,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n","  warnings.warn(msg, FutureWarning)\n"]},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f2769ae5b90>"]},"metadata":{},"execution_count":27},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zFcnF6Rpjkny","executionInfo":{"status":"ok","timestamp":1631912412202,"user_tz":-540,"elapsed":220,"user":{"displayName":"KAZUKI HIRAHARA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09073430568031937610"}},"outputId":"d3b7b97d-2657-4524-819d-7c21c5e234d5"},"source":["test_x[\"exp_05_1\"].min()"],"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.2687901"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","metadata":{"id":"Nhrb3DLLjy-_","executionInfo":{"status":"ok","timestamp":1631912623159,"user_tz":-540,"elapsed":726,"user":{"displayName":"KAZUKI HIRAHARA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09073430568031937610"}}},"source":["best_border_42_1 = 0.02979319225231955\n","best_border_20_1 = 0.022662647893030057\n","best_border_10_1=0.03969976921217697"],"execution_count":30,"outputs":[]},{"cell_type":"code","metadata":{"id":"6Um5dMmOkiSq","executionInfo":{"status":"ok","timestamp":1631912653856,"user_tz":-540,"elapsed":240,"user":{"displayName":"KAZUKI HIRAHARA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09073430568031937610"}}},"source":["best_border = (best_border_42_1 + best_border_20_1 + best_border_10_1)/3"],"execution_count":31,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9KBlKnHIkvHo","executionInfo":{"status":"ok","timestamp":1631912658048,"user_tz":-540,"elapsed":303,"user":{"displayName":"KAZUKI HIRAHARA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09073430568031937610"}},"outputId":"ed122326-6224-4a72-8a5f-26741399914c"},"source":["best_border"],"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.030718536452508865"]},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","metadata":{"id":"5I952vSFnmSf"},"source":["## 3 items"]},{"cell_type":"code","metadata":{"id":"LZgX5bpGkwH7","executionInfo":{"status":"ok","timestamp":1631913275830,"user_tz":-540,"elapsed":231,"user":{"displayName":"KAZUKI HIRAHARA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09073430568031937610"}}},"source":["# 単純に7当分した結果で提出\n","sub = pd.read_csv(\"/content/drive/MyDrive/07_Competition/signate-471/data/sample_submit.csv\", names=[\"id\", \"judgement\"])\n","\n","pred = test_x[[\"exp_42_1\",\"exp_20_1\",\"exp_10_1\"]].sum(axis=1)/3\n","predictions = np.where(pred < best_border, 0, 1)\n","\n","# submission\n","sub[\"judgement\"] = predictions\n","sub.to_csv(\"exp038_test_submission.csv\", index=False, header=False)"],"execution_count":53,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":408},"id":"geEdV5OUlQ-h","executionInfo":{"status":"ok","timestamp":1631913277584,"user_tz":-540,"elapsed":563,"user":{"displayName":"KAZUKI HIRAHARA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09073430568031937610"}},"outputId":"73c198bf-cd32-4eec-cba4-8e0a1bd7803a"},"source":["sub"],"execution_count":54,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>judgement</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>27145</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>27146</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>27147</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>27148</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>27149</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>40829</th>\n","      <td>67974</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>40830</th>\n","      <td>67975</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>40831</th>\n","      <td>67976</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>40832</th>\n","      <td>67977</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>40833</th>\n","      <td>67978</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>40834 rows × 2 columns</p>\n","</div>"],"text/plain":["          id  judgement\n","0      27145          0\n","1      27146          0\n","2      27147          0\n","3      27148          0\n","4      27149          0\n","...      ...        ...\n","40829  67974          0\n","40830  67975          0\n","40831  67976          0\n","40832  67977          1\n","40833  67978          0\n","\n","[40834 rows x 2 columns]"]},"metadata":{},"execution_count":54}]},{"cell_type":"code","metadata":{"id":"ybC8RFMolUhU","executionInfo":{"status":"ok","timestamp":1631913280353,"user_tz":-540,"elapsed":226,"user":{"displayName":"KAZUKI HIRAHARA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09073430568031937610"}}},"source":["sub_42_1=pd.read_csv(\"/content/drive/MyDrive/07_Competition/signate-471/submission/exp36h_submission_42_1.csv\",header=None)\n","sub_42_1.columns=[\"id\",\"judgement\"]"],"execution_count":55,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":408},"id":"phIwKNm-l6FW","executionInfo":{"status":"ok","timestamp":1631913281423,"user_tz":-540,"elapsed":4,"user":{"displayName":"KAZUKI HIRAHARA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09073430568031937610"}},"outputId":"7b2870c7-d318-4b09-ac22-91eab71fe99a"},"source":["sub_42_1"],"execution_count":56,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>judgement</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>27145</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>27146</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>27147</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>27148</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>27149</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>40829</th>\n","      <td>67974</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>40830</th>\n","      <td>67975</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>40831</th>\n","      <td>67976</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>40832</th>\n","      <td>67977</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>40833</th>\n","      <td>67978</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>40834 rows × 2 columns</p>\n","</div>"],"text/plain":["          id  judgement\n","0      27145          0\n","1      27146          0\n","2      27147          0\n","3      27148          0\n","4      27149          0\n","...      ...        ...\n","40829  67974          0\n","40830  67975          0\n","40831  67976          0\n","40832  67977          0\n","40833  67978          0\n","\n","[40834 rows x 2 columns]"]},"metadata":{},"execution_count":56}]},{"cell_type":"code","metadata":{"id":"VvA3D_9hl7Dw","executionInfo":{"status":"ok","timestamp":1631913282940,"user_tz":-540,"elapsed":210,"user":{"displayName":"KAZUKI HIRAHARA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09073430568031937610"}}},"source":["check_df =pd.concat([sub,sub_42_1[[\"judgement\"]]],axis=1)\n","check_df.columns=[\"id\",\"judgement_1\",\"judgement_2\"]\n","check_df[\"check\"] = check_df[\"judgement_1\"] - check_df[\"judgement_2\"]"],"execution_count":57,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NbET9OiPmkFH","executionInfo":{"status":"ok","timestamp":1631913283900,"user_tz":-540,"elapsed":5,"user":{"displayName":"KAZUKI HIRAHARA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09073430568031937610"}},"outputId":"e7b2b27e-6f2a-4df3-aefc-318abb5e70f0"},"source":["check_df[\"check\"].value_counts()"],"execution_count":58,"outputs":[{"output_type":"execute_result","data":{"text/plain":[" 0    40179\n","-1      351\n"," 1      304\n","Name: check, dtype: int64"]},"metadata":{},"execution_count":58}]},{"cell_type":"markdown","metadata":{"id":"b2sizkAmnj2y"},"source":["## ALL"]},{"cell_type":"code","metadata":{"id":"92TlLgmxm59q","executionInfo":{"status":"ok","timestamp":1631913360706,"user_tz":-540,"elapsed":217,"user":{"displayName":"KAZUKI HIRAHARA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09073430568031937610"}}},"source":["# 単純に7当分した結果で提出\n","sub_2 = pd.read_csv(\"/content/drive/MyDrive/07_Competition/signate-471/data/sample_submit.csv\", names=[\"id\", \"judgement\"])\n","\n","pred = test_x[[\"exp_42_1\",\"exp_20_1\",\"exp_10_1\",\"exp_1_1\",\"exp_05_1\"]].sum(axis=1)/5\n","predictions = np.where(pred < best_border, 0, 1)\n","\n","# submission\n","sub_2[\"judgement\"] = predictions"],"execution_count":59,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":408},"id":"VjdtxYoMnbsG","executionInfo":{"status":"ok","timestamp":1631913365062,"user_tz":-540,"elapsed":221,"user":{"displayName":"KAZUKI HIRAHARA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09073430568031937610"}},"outputId":"2394be3b-022b-4fe9-ad9d-b176b0adeee8"},"source":["sub_2"],"execution_count":60,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>judgement</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>27145</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>27146</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>27147</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>27148</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>27149</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>40829</th>\n","      <td>67974</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>40830</th>\n","      <td>67975</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>40831</th>\n","      <td>67976</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>40832</th>\n","      <td>67977</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>40833</th>\n","      <td>67978</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>40834 rows × 2 columns</p>\n","</div>"],"text/plain":["          id  judgement\n","0      27145          1\n","1      27146          1\n","2      27147          1\n","3      27148          1\n","4      27149          1\n","...      ...        ...\n","40829  67974          1\n","40830  67975          1\n","40831  67976          1\n","40832  67977          1\n","40833  67978          1\n","\n","[40834 rows x 2 columns]"]},"metadata":{},"execution_count":60}]},{"cell_type":"code","metadata":{"id":"gNuyGMT3ncn9","executionInfo":{"status":"ok","timestamp":1631913439358,"user_tz":-540,"elapsed":551,"user":{"displayName":"KAZUKI HIRAHARA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09073430568031937610"}}},"source":["check_df_2 =pd.concat([sub_2,sub_42_1[[\"judgement\"]]],axis=1)\n","check_df_2.columns=[\"id\",\"judgement_1\",\"judgement_2\"]\n","check_df_2[\"check\"] = check_df_2[\"judgement_1\"] - check_df_2[\"judgement_2\"]"],"execution_count":61,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RlMdPEuunu0C","executionInfo":{"status":"ok","timestamp":1631913455277,"user_tz":-540,"elapsed":3,"user":{"displayName":"KAZUKI HIRAHARA","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09073430568031937610"}},"outputId":"49a1df38-2b92-4687-aad9-7acd678b4c96"},"source":["check_df_2[\"check\"].value_counts()"],"execution_count":62,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1    37491\n","0     3343\n","Name: check, dtype: int64"]},"metadata":{},"execution_count":62}]},{"cell_type":"code","metadata":{"id":"wx2I_DtAnyso"},"source":[""],"execution_count":null,"outputs":[]}]}